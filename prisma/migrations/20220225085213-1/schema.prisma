generator client {
  provider = "prisma-client-js"
}

datasource postgresql {
  provider = "postgresql"
  url = "***"
}

model Tweet {
  id        Int          @id @default(autoincrement())
  createdAt DateTime     @default(now())
  content   String?
  likes     LikedTweet[]
  author    User?        @relation(fields: [authorId], references: [id])
  authorId  Int?
  comments  Comment[]
}

model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique
  password   String       @default("")
  name       String?
  createdAt DateTime @default(now())
  phonenumber String       @default("")
   deposit   String       @default("0")
    point   String       @default("0")
  tweets     Tweet[]
  Profile    Profile[]
  likedTweet LikedTweet[]
  comments   Comment[]
  Following  Following[]

 UserProfile    UserProfile[]
  ExchangeRate    ExchangeRate[]
  Deliveryfee Deliveryfee[]
 Sellingprice Sellingprice[]
 Subid Subid[]
  Connectinfo Connectinfo[]
   Maxiplan Maxiplan[]
  
    Adminbasicplan Adminbasicplan[]
    Adminbasicmall Adminbasicmall[]
    Adminoptionfee Adminoptionfee[]
 Admincollectmarket Admincollectmarket[]

 Admincollectnation Admincollectnation[]
 Admincollectcategory Admincollectcategory[]
 Admincommissionmarket Admincommissionmarket[]
 Admincommissionfee Admincommissionfee[]
 Admincommissiontransfer Admincommissiontransfer[]
 Adminsellerfiltering Adminsellerfiltering[]
 Stockhandling Stockhandling[]
 Checkpoint Checkpoint[]
Changepoint Changepoint[]
Demandpoint Demandpoint[]
Ordermanageitems  Ordermanageitems[]
Deliverymangeitems  Deliverymangeitems[]
 Filtering  Filtering[]
 Productupdate  Productupdate[]
 Addmenual  Addmenual[]
 Privacypolicy  Privacypolicy[]
  Refundpolicy  Refundpolicy[]
   Termsanduse  Termsanduse[]








}

model LikedTweet {
  id      Int      @id @default(autoincrement())
  tweet   Tweet    @relation(fields: [tweetId], references: [id])
  likedAt DateTime @default(now())
  userId  Int?
  User    User?    @relation(fields: [userId], references: [id])
  tweetId Int
}

model Following {
  id       Int    @id @default(autoincrement())
  name     String
  avatar   String
  followId Int
  User     User?  @relation(fields: [userId], references: [id])
  userId   Int?
}

model Profile {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  bio       String?
  location  String?
  website   String?
  avatar    String?
  userId    Int?     
  User      User?    @relation(fields: [userId], references: [id])
}

//jinsung

//maxi plan

model UserProfile {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  kakaoid       String
  gsiid  String
  bankname   String
  bankaccount    String
    businessnumber   String
  contactemail    String
   deposit    String
    point    String
  userId    Int?     
  User      User?    @relation(fields: [userId], references: [id])
}




model Maxiplan {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
 malls String@default("")
 plan String@default("")
        monthlycollecting String@default("")
        productamount String@default("")
        productmanagingamount String@default("")
        update String@default("")
        monthlyplanfee String@default("")
        settingfee String@default("")
        translatefee String@default("")

 
platformsettingprice String@default("")
monthlyplatformsfee String@default("")
  userId    Int?     
  User      User?    @relation(fields: [userId], references: [id])
}

model ExchangeRate {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  cntokor       String?  @default("")
  cntojp       String?  @default("")
  jptokor       String?  @default("")
  jptomal       String?  @default("")
  jptocn       String?  @default("")
  kortomal       String?  @default("")
  kortocn       String?  @default("")
  kortojp       String?  @default("")
  ustocn       String?  @default("")
  ustomal       String?  @default("")
    ustojp       String?  @default("")
  ustokor       String?  @default("")
  indexid  Int? 
  userId    Int?     
  User      User?    @relation(fields: [userId], references: [id])
}


model Deliveryfee {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  cntokor       String?  @default("")
  cntojp       String?  @default("")
  jptokor       String?  @default("")
  jptomal       String?  @default("")
  jptocn       String?  @default("")
  kortomal       String?  @default("")
  kortocn       String?  @default("")
  kortojp       String?  @default("")
  ustocn       String?  @default("")
  ustomal       String?  @default("")
    ustojp       String?  @default("")
  ustokor       String?  @default("")
indexid  Int? 
  userId    Int?     
  User      User?    @relation(fields: [userId], references: [id])
}




model Sellingprice {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  price       String?  @default("")
  mallname String?  @default("")
  userId    Int?     
  User      User?    @relation(fields: [userId], references: [id])
}



model Connectinfo  {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  shopid       String?  @default("")
    apiid       String?  @default("")
  apikey       String?  @default("")
  code       String?  @default("")
  shop       String?  @default("")
  access_token String?  @default("")
  refresh_token String?  @default("")
  expires_in Int?  @default(1)
  refresh_expires_in Int?  @default(1)
  userId    Int?     
  User      User?    @relation(fields: [userId], references: [id])
}


model Subid {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  subid       String?  @default("")
  userId    Int?     
  User      User?    @relation(fields: [userId], references: [id])
}



model Comment {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  content   String?
  Tweet     Tweet?    @relation(fields: [tweetId], references: [id])
  tweetId   Int?
  User      User?     @relation(fields: [userId], references: [id])
  userId    Int?
  comments  Comment[] @relation("CommentToComment")
  Comment   Comment?  @relation("CommentToComment", fields: [commentId], references: [id])
  commentId Int?
}


//jinsungadmin
model Adminbasicplan {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  plan       String?
  monthlycollecting  String?
  productamount String?
  productmanagingamount String?
  update String?
  monthlyplanfee String?
  settingfee String?

  translatefee String?
  active Boolean? @default(true)
  userId    Int?     
  User      User?    @relation(fields: [userId], references: [id])
}


model Adminbasicmall {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  country       String?
  platform  String?
  settingfee String?
    translatefee String?
 monthlyfee String?
 selleramount String?
  active Boolean? @default(true)
  userId    Int?     
  User      User?    @relation(fields: [userId], references: [id])
}


model Adminoptionfee {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  productamount String?
  price String?
  promotion String?
  modelsort String?
  active Boolean? @default(true)
 indexid Int
  userId    Int?     
  User      User?    @relation(fields: [userId], references: [id])
}


model Admincollectmarket {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  productamount String?
  market String?  @default("")
  country String?  @default("")
  active Boolean? @default(true)
  image String?
  userId    Int?    
  User      User?    @relation(fields: [userId], references: [id])
}


model Admincollectnation {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  productamount String? 
  market String?  @default("")
  country String?  @default("")
  image String?
  active Boolean? @default(true)
 
  userId    Int?    
  User      User?    @relation(fields: [userId], references: [id])
}


model Admincollectcategory {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  order String?
  first String?
  second String?
  message String?
  active Boolean? @default(true)
 
  userId    Int?     
  User      User?    @relation(fields: [userId], references: [id])
}





model Admincommissionmarket {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  country String?
  market String?
  fee String?

  userId    Int?     
  User      User?    @relation(fields: [userId], references: [id])
}



model Admincommissionfee {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  country String?
  market String?
  fee String?

  userId    Int?     
  User      User?    @relation(fields: [userId], references: [id])
}


model Admincommissiontransfer {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  country String?
  market String?
  fee String?

  userId    Int?     
  User      User?    @relation(fields: [userId], references: [id])
}

model Adminsellerfiltering {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  country String?
  market String?
  contents String?
  userId    Int?     
  User      User?    @relation(fields: [userId], references: [id])
}
model Filtering {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  country String?
  contents String?
  userId    Int?     
  market String?
  User      User?    @relation(fields: [userId], references: [id])
}


model Stockhandling {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  stockimage String?
  name String?
  price String?
  stock String?
  stockdemand String?
  widthrowdemand String?
  productfrom String  @default("")
  productto String  @default("")
  indexid Int?
  userId    Int?    
  User      User?    @relation(fields: [userId], references: [id])
}

model Checkpoint {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  marketname String?
  price String?
  image String?
  checkstatus String?

  userId    Int?    
  User      User?    @relation(fields: [userId], references: [id])
}

model Changepoint {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  price String?
  checkstatus String?
  userId    Int?    
  User      User?    @relation(fields: [userId], references: [id])
}



model Productupdate {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())


  prefix String?
  postfix String?


  userId    Int?    
  User      User?    @relation(fields: [userId], references: [id])
}


model Addmenual {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  contents String?

  userId    Int?    
  User      User?    @relation(fields: [userId], references: [id])
}

model Privacypolicy {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  contents String?

  userId    Int?    
  User      User?    @relation(fields: [userId], references: [id])
}

model Refundpolicy {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  contents String?

  userId    Int?    
  User      User?    @relation(fields: [userId], references: [id])
}

model Termsanduse {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  contents String?

  userId    Int?    
  User      User?    @relation(fields: [userId], references: [id])
}


model Demandpoint {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  confirmAt String? @default("")
  bankaccount String?
  price String?
  checkname String?
   checkstatus String? @default("")
  image String?
  userId    Int?    
  User      User?    @relation(fields: [userId], references: [id])
}

model Ordermanageitems {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  product_main_image String?
  name String?
   currency String?
  shipping_amount String?
   created_at String?
  updated_at String?
     paid_price String?
  item_price String?

  userId    Int?    
  User      User?    @relation(fields: [userId], references: [id])
}

model Deliverymangeitems {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  product_main_image String?
  name String?
   currency String?
  shipping_amount String?
   created_at String?
  updated_at String?
     paid_price String?
  item_price String?

  userId    Int?    
  User      User?    @relation(fields: [userId], references: [id])
}

